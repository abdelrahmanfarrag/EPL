plugins {
  id 'com.android.library'
  id 'org.jetbrains.kotlin.android'
  id 'kotlin-kapt'
  id 'com.google.dagger.hilt.android'
}

android {
  namespace 'com.abdelrahman.data'
  compileSdk 33

  defaultConfig {
    minSdk 24
    targetSdk 33
    buildConfigField "String", "API_KEY", "\"${API_KEY}\""
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    consumerProguardFiles "consumer-rules.pro"
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
  }

  compileOptions {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
  }
  kotlinOptions {
    jvmTarget = '17'
  }
}

dependencies {
  //retrofit
  implementation "com.squareup.retrofit2:retrofit:$retrofit"
  implementation "com.squareup.retrofit2:converter-gson:$retrofit"
  //http
  implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_interceptor"
  //room
  implementation "androidx.room:room-ktx:$room_version"
  implementation "androidx.room:room-runtime:$room_version"
  annotationProcessor "androidx.room:room-compiler:$room_version"
  kapt "androidx.room:room-compiler:$room_version"
  kapt "androidx.room:room-ktx:$room_version"


  //Testing
  testImplementation "junit:junit:$junit"
  androidTestImplementation "androidx.test.ext:junit:$junit_test"
  androidTestImplementation "androidx.test.espresso:espresso-core:$esspresso"
  testImplementation "org.mockito.kotlin:mockito-kotlin:$mockito_kotlin"
  testImplementation "org.mockito:mockito-inline:$mockito_inline"
  testImplementation "androidx.arch.core:core-testing:$core_testing"
  testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_test"
  //Hilt
  implementation "com.google.dagger:hilt-android:$hilt_version"
  kapt "com.google.dagger:hilt-compiler:$hilt_version"

  implementation project(':domain')
}
kapt {
  correctErrorTypes true
}
